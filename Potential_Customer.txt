import pandas as pd
import numpy as np

df = pd.read_csv("Advertising_data.csv")

X = df.iloc[:,[2,3]].values
y = df.iloc[:,4].values

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.25, random_state = 0)

from sklearn.preprocessing import StandardScaler

SC = StandardScaler()

X_train = SC.fit_transform(X_train)
X_test = SC.transform(X_test)

from sklearn.svm import SVC

classifier = SVC(kernel = 'linear', random_state = 0)
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)

print(accuracy)

from sklearn.model_selection import GridSearchCV

parameters = [{'C':[1,10,100,1000], 'kernel':['linear']},
             {'C':[1,10,100,1000],'kernel':['rbf'], 'gamma':[0.1,0.2,0.3,0.4,0.5]}]
grid_search = GridSearchCV(estimator = classifier,
                          param_grid = parameters,
                          scoring = 'accuracy',
                          cv = 10,
                          n_jobs = -1)
grid_search = grid_search.fit(X_train, y_train)

accuracy = grid_search.best_score_


print(accuracy)

grid_search.best_params_


classifier = SVC(C = 1000, kernel = 'rbf', gamma = 0.1)
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)

print(cm)

print(accuracy)